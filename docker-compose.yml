version: '3'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9.29
    ports: 
      - "5672:5672"
    environment:
      - RABBIT_USER=guest
      - RABBIT_PASS=guest


  consumatore:
    container_name: consumatore
    build:
      context: movenet.pytorch
    depends_on:
      - rabbitmq
    volumes:
      - ./movenet.pytorch:/consumatore
    environment:
      - Q_PORT=5672



  produttore:
    container_name: produttore
    build:
      context: Produttore
    ports: 
      - "3002:5000"
    depends_on:
      - rabbitmq
      - consumatore
    environment:
      - Q_PORT=5672


  postgres:
    container_name: postgres
    image: "postgres:13"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=prog_pa
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      #- POSTGRES_HOST_AUTH_METHOD=trust
    volumes: 
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql      
    restart: always  

  server:
    container_name: server
    image: node_server:1.0
    build:
      context: Server
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - PGDATABASE=prog_pa
      - PGPORT=5432
      - PGHOST=postgres
      - PGUSER=user
      - PGPASSWORD=password
      - FPORT=5000
    depends_on:
      - postgres
      - consumatore
    volumes:
      - ./movenet.pytorch/data:/src/data
    restart: always